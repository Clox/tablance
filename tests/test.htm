<head>
	<script src="../src/tablance.js"></script>
	<link rel="stylesheet" href="../styles/tablance.min.css">

	<script src="https://cdn.jsdelivr.net/npm/pikaday/pikaday.js"></script>
	<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/pikaday/css/pikaday.css">
	<style>
		body {background-color: powderblue;}
		</style>
	<script>
		document.addEventListener("DOMContentLoaded", ()=>{
			function descFunc(value, dataRow,col,rowIndex) {
				return `fo<u>ob</u>ar ${rowIndex} - ${dataRow.descLetter}`
			}
			const foods=[{text:"Nothing",pinned:true},{text:"banana",value:1},{text:"apple",value:2},
						{text:"cucumber",value:3},{text:"orange",value:4},{text:"grapes",value:5},
						{text:"melon",value:6},{text:"pineapple",value:7},{text:"carrot",value:8},
						{text:"another banana",value:9},{text:"another apple",value:10},
						{text:"another cucumber",value:11},{text:"another orange",value:12},
						{text:"another set of grapes",value:13},{text:"another melon",value:14},
						{text:"another pineapple",value:15},{text:"another carrot",value:13}];
			const myTablanceCols=[{type:"select"},{type:"expand"}
				,{id:"desc",title:"Descriptionn",dffdfdfd:69,html:true,input:{multiEdit:false,onChange:(e,...args)=>{
					e.preventDefault();
					console.log(args)
				},type:"text",maxLength:5,placeholder:"placeholder",enabled:()=>Math.random()>.5},render:descFunc}
				,{id:"amount",title:"Amount",width:"85px",input:true},{id:"balance",title:"Balance",width:"85px"}
				,{id:"food",title:"Food",width:"120px",input:{multiCellWidth:100,type:"select"
					,options:foods,minOptsFilter:100,allowCreateNew:true,allowSelectEmpty:true
					,selectInputPlaceholder:"Sök/Skapa"}}
				,{id:"mainDate",title:"Main Date",width:"120px",input:{multiCellWidth:100,type:"date"}}];
			const myExpansion={type:"list",titlesColWidth:"8em",entries:[

			{type:"field",title:"Format field",id:"myFormattedData"
				,input:{type:"text", format:{ blocks: [8, 4], delimiter: "-", numericOnly: true }}},
			{type:"context",id:"hemadress",title:"Hemadress",entry: 
					{type:"group",multiEdit:true,entries:
						[{type:"field",title:"Gata",id:"home_street",input:{type:"text",
								onChange:(...args)=>console.log(args)}}
							,{type:"field",title:"Postnummer",id:"home_zip",input:{type:"text",
								onChange:(...args)=>console.log(args)}}
							,{type:"field",title:"Ort",id:"home_city",input:{type:"text",
								onChange:(...args)=>console.log(args)}}]}
				},
				{type:"context",id:"innergrejer",title:"Inre grej",entry:{type:"field",id:"foo"}},
				{type:"field",title:"File",id:"file",input:{type:"file",fileUploadHandler:xhr=>{
						xhr.open("POST", "http://localhost:3000/tests/serve.php", true);
					},
					fileMetasToShow:{filename:true},
					openHandler:(...args)=>{
						console.log(args);
					}
				}}
				,{type:"field",title:"Select",id:"sel",input:{type:"select",options:foods,minOptsFilter:100
									,allowCreateNew:true,allowSelectEmpty:true,selectInputPlaceholder:"Sök/Skapa"}},
				{type:"repeated",id:"addresses",sortCompare:(a,b)=>a.zip>b.zip?1:-1,entry:{type:"group",title:"Adress"
					,entries:
					[{type:"field",title:"Gata",id:"street"},{type:"field",title:"Postnummer",id:"zip"}
						,{type:"field",title:"Ort",id:"city"}]}},
				
				
				{type:"field",title:"Date",id:"date",input:{type:"date",onChange:(...args)=>console.log(args)}},
				{type:"repeated",id:"repeatedField",sortCompare:(a,b)=>a.bar>b.bar?1:-1,entry:
					{type:"field",title:"repeated row",id:"foo"}
				},
				{type:"field",input:{type:"button",btnText:"Cool button",clickHandler:btnClickHandler}},
			 	{type:"group",title:"förordnande",multiEdit:true,entries:[
					{type:"repeated",id:"custodianshipChanges",multiEdit:true,create:true
					,sortCompare:(a,b)=>a.date>b.date?1:-1
					,onCreate:(...args)=>console.log(args)
					,onDelete:(...args)=>console.log(args)
					,creationText:"Lägg till",deleteAreYouSureText:"Är du säker?",deleteText:"Ta bort"
					,areYouSureYesText:"Ja",areYouSureNoText:"Nej",entry:
						{type:"group",closedRender:data=>`${data.type?.text} sedan ${data.date}`,entries:[
								{type:"field",title:"Datum",id:"date",input:{type:"date",multiEdit:true}},
								{type:"field",title:"Typ av ställföreträdarskap",id:"type",input:{type:"select",
									options:[{text:"God Man",value:"trustee"},{text:"Förvaltare",value:"administrator"}]
									,multiEdit:true
								}}],
							creationValidation:(message,struct,data,index,cellObj)=>{
								message("Both fields are mandatory. Enter the data or delete to cancel.");
								return data.date&&data.type;
							}
						}
					}
				]}, 
				{type:"list",title:"förordnande-lista",titlesColWidth:0,entries:[
					{type:"repeated",id:"custodianshipChanges",create:true,onCreate:(...args)=>console.log(args)
					,onDelete:(...args)=>console.log(args)
					,sortCompare:(a,b)=>a.date>b.date?1:-1
					,creationText:"Lägg till",deleteAreYouSureText:"Är du säker?",deleteText:"Ta bort"
					,areYouSureYesText:"Ja",areYouSureNoText:"Nej",entry:
						{type:"group",closedRender:data=>`${data.type?.text} sedan ${data.date}`,entries:[
								{type:"field",title:"Datum",id:"date",input:{type:"date"}},
								{type:"field",title:"Typ av ställföreträdarskap",id:"type",input:{type:"select",
									options:[{text:"God Man",value:"trustee"},{text:"Förvaltare",value:"administrator"}]
									,allowSelectEmpty:false
								}}],
							creationValidation:(message,struct,data,index,cellObj)=>{
								message("Both fields are mandatory. Enter the data or delete to cancel.");
								return data.date&&data.type;
							}
						}
					}
				]},
				{type:"lineup",title:"Bunch ",entries:[
					{type:"field",title:"First thing",id:"first"},
					{type:"field",title:"Second thing",id:"second"},
					{type:"field",title:"Third thing",id:"third"},
					{type:"field",input:{type:"button",btnText:"My button"}},
					{type:"field",title:"Fourth thing",id:"fourth"},
					{type:"field",title:"Fifth thing",id:"fifth"},
					{type:"field",title:"Sixth thing",id:"sixth"},
					{type:"field",title:"Seventh thing",id:"seventh"},
					{type:"field",title:"Input thing",id:"inputthing",input:{type:"text"}},
				]},
				{type:"group",title:"grupp",entries:[
					{type:"field",title:"Hello",id:"hello",input:{type:"text"}},
					{type:"field",title:"World",id:"world",input:{type:"text"}},
					{type:"field",title:"Emptytest",id:"emptykey",input:{type:"text"}}]},
				{type:"field",title:"Foobar One",id:"foobar1"
					,input:{type:"text",maxLength:5,placeholder:"boo",multiEdit:true,
					validation:(newVal,message)=>{
						message("Must be \"Foo\"");
						return newVal=="Foo";
					}}},
				{type:"field",title:"Foobar Two",id:"foobar2"},
				{type:"list",title:"Baz entries",titlesColWidth:"6em",entries:[
					{type:"field",title:"Baz One",id:"baz1"},
					{type:"field",title:"Baz Two",id:"baz2"},
					{type:"field",title:"datum",id:"formatdate",
						input:{format:{date: true},placeholder:"ÅÅÅÅ-MM-DD"}},
					{type:"field",title:"Anteckningar",id:"notes",maxHeight:150,input:{type:"textarea"}},
				]},
			]};
			const lang={fileName:"Filnamn",fileLastModified:"Senast ändrad", fileSize:"Filstorlek"
								,fileUploadDone:"Färdig!",fileType:"Filtyp"
								,fileChooseOrDrag:"<b>Tryck för att välja en fil</b> eller dra den hit"
								,fileDropToUpload:"<b>Släpp för att ladda upp<b>"
								,filterPlaceholder:"Sök"
							};

			const onlyExpansion=false;
			const tablanceContainer=document.getElementById("tablanceContainer1");
			tablanceContainer.classList.toggle("only-expansion",onlyExpansion);
			const myTablance=window.myTablance=new Tablance(tablanceContainer,myTablanceCols,true,true
				,myExpansion,{defaultFileMetasToShow:{filename:false},lang:lang},onlyExpansion);
			window.tablance=myTablance;//to play with public methods via console

			let data;
			for (let i=0; i<3; i++) {
				data=[];
				for (let ii=0; ii<1000; ii++) {
					data.push({myFormattedData:123456789123,desc:"dummy",foobar1:i+ii,foobar2:i*2+ii*2,descLetter:String.fromCharCode(ii)
						,amount:(Math.random()*100).toFixed(2),balance:(Math.random()*100).toFixed(2),baz1:69,baz2:70
						,hello:"Hallå",world:"Världen",innergrejer:{foo:1337}
						,addresses:[{street:"kaplan",zip:9999,city:"skara"},{street:"kaplan",zip:8999,city:"skara"}]
						//,sel:Math.random()<.5?null:foods[Math.round(Math.random()*(foods.length-1))]
						,sel:Math.random()<.5?null:foods[Math.round(Math.random()*(foods.length-1))].value
						,repeatedField:[{foo:"row one in repeated",bar:5},{foo:"row two in repeated",bar:1}
										,{foo:"row three in repeated",bar:3},{foo:"row four in repeated",bar:30}]
						,repeatedGroup:[{foo1:"blahblah",foo2:"lalala"},{foo1:"bloj",foo2:"kapapa"}]
						,custodianshipChanges:[
										{date:"2020-01-01",type:"trustee"},{date:"1999-01-01",type:"administrator"}
										,{date:"2003-01-01",type:"trustee"},{date:"1999-05-01",type:"administrator"}],
						first:"One",second:"Second",third:"Third",fourth:"Fourth",fifth:"Five",sixth:"Sixth"
						,seventh:"Seven"});
				}
				myTablance.addData(data);
			}
			myTablance._allData[0].file={lastModified:1669981639918,name:"foo.txt",size:1337,type: "text"};

			if (onlyExpansion) {
				const myTablance2=new Tablance(document.getElementById("tablanceContainer2"),null,true,true
				,myExpansion,null,true);
				myTablance2.addData(data);
				const myTablance3=new Tablance(document.getElementById("tablanceContainer3"),null,true,true
				,myExpansion,null,true);
				myTablance3.addData(data);
				myTablance.chainTables(myTablance2,myTablance3);
			}
		});

		function btnClickHandler(e,dataObject,mainIndex,struct,cellObject) {
			console.log(e);
			console.log(dataObject);
			console.log(mainIndex);
			console.log(struct);
			console.log(cellObject);
		}
	</script>
	<style>
		#tablanceContainer1:not(.only-expansion) {
			border: 2px solid;
			overflow:hidden;
			resize: both;
			height:700px;
			width:700px
		}
	</style>
</head>

<body>
	<input value="input for testing tab-focusing"/>
	<div id="tablanceContainer1"></div>
	<br><br><br><br><br>
	<div id="tablanceContainer2"></div>
	<br><br><br><br><br>
	<div id="tablanceContainer3"></div>
</body>
<!-- 
tablance.updateData(0,"addresses[]",{street:"paradisäppelvägen",zip:0,city:"ankeborg"});
tablance.updateData(0,"custodianshipChanges",[{date:"1999-01-01",type:"trustee"},{date:"1999-01-02",type:"administrator"}]);
-->